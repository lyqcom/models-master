# Builtin Configurations(DO NOT CHANGE THESE CONFIGURATIONS unless you know exactly what you are doing)
enable_modelarts: False
# Url for modelarts
data_url: ""
train_url: ""
checkpoint_url: ""
# Path for local
run_distribute: False
enable_profiling: False
data_path: "/cache/data"
output_path: "/cache/train"
device_target: "Ascend"
checkpoint_path: "./checkpoint/"
checkpoint_file_path: ""

# ==============================================================================
# Training options
optimizer: "Momentum"
class_num: 1001
batch_size: 128
loss_scale: 1024
momentum: 0.9
weight_decay: 0.0001
epoch_size: 90
start_epoch: 0
save_checkpoint: True
save_checkpoint_epochs: 5
keep_checkpoint_max: 10
warmup_epochs: 5
lr_decay_mode: "poly"
lr_init: 0
lr_end: 0.00001
lr_max: 0.8
lars_epsilon: 0.0
lars_coefficient: 0.001
use_label_smooth: 0
net_name: "resnet18"
dataset: "imagenet2012"
device_num: 1
pre_trained: ""
fp32_ckpt: ""
filter_weight: False
save_best_ckpt: True
mode_name: "GRAPH"
boost_mode: "O2"
conv_init: "XavierUniform"
dense_init: "TruncatedNormal"
all_reduce_fusion_config:
    - 85
    - 160
train_image_size: 224
eval_image_size: 224

#uni pruning
exp_name: 'Resnet18_baseline'
prune_flag: 0
prune_rate: 0.25
pruning_step: 16
filter_lower_threshold: 32
retrain_epochs: 9
mask_path: ''

# Export options
device_id: 7
export_batch_size: 16
width: 224
height: 224
file_name: "resnet18"
file_format: "MINDIR"
ckpt_file: ""
network_dataset: "resnet18_imagenet"

# Retrain options
save_graphs: False
save_graphs_path: "./graphs"
has_trained_epoch: 0
has_trained_step: 0

---
# Help description for each configuration
data_url: "Dataset url for obs"
checkpoint_url: "The location of checkpoint for obs"
data_path: "Dataset path for local"
output_path: "Training output path for local"
device_target: "Target device type, available: [Ascend, GPU, CPU]"
num_classes: "Class for dataset"
batch_size: "Batch size for training and evaluation"
epoch_size: "Total training epochs."
checkpoint_file_path: "The location of the checkpoint file."
save_graphs: "Whether save graphs during training, default: False."
save_graphs_path: "Path to save graphs."

exp_name: "the name of the current experiment"
prune_flag: "set to 1 to enable pruning"
prune_rate: "pruning rate"
pruning_step: "the number of filter to prune as a single group"
filter_lower_threshold: "the minimal number of channels in a layer"
retrain_epochs: "the number of fine-tune epochs between pruning steps"
mask_path: "path to pruning mask saved as .json on train in os.path.join(output_path, exp_name)"


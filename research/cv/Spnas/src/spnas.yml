general:
    backend: mindspore

pipeline: [serial, parallel, fullytrain]

serial:
    pipe_step:
        type: SearchPipeStep

    search_algorithm:
        type: SpNasS
        max_sample: 20
        objective_keys: AP50

    search_space:
        type: SearchSpace
        hyperparameters:
            -   key: network.backbone.code
                type: CATEGORY
                range: ['111-2111-211111-211']

    model:
        model_desc:
            type: Faster_Rcnn_MD

    trainer:
        type: SpNasTrainerCallback
        epochs: 6
        get_train_metric_after_epoch: False
        model_statistics: False
        is_detection_trainer: True
        perfs_cmp_key: AP50
        optimizer:
            type: SGD
            params:
                lr: 0.03
                momentum: 0.9
                weight_decay: !!float 1e-4
        lr_scheduler:
            type: WarmupScheduler
            by_epoch: False
            params:
                warmup_type: linear
                warmup_iters: 2000
                warmup_ratio: 0.001
                after_scheduler_config:
                    type: MultiStepLR
                    by_epoch: True
                    params:
                        milestones:  [10, 20]
                        gamma: 0.1
        loss:
            type: SumLoss
        metric:
            type: coco
            params:
                anno_path: /cache/datasets/COCO2017/annotations/instances_val2017.json

    dataset:
        type: CocoDataset
        common:
            batch_size: 2
            num_parallel_workers: 8
            flip_ratio: 0.5
            expand_ratio: 1.0
            img_width: 1280
            img_height: 768
            keep_ratio: True
            device_id: 0
            device_num: 1
            rank_id: 0
            python_multiprocessing: True
            coco_root: "/cache/datasets/COCO2017"
            mindrecord_dir: "/cache/MindRecord_COCO_TRAIN"
            instance_set: "annotations/instances_{}.json"
            coco_classes: ['background', 'person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus',
                           'train', 'truck', 'boat', 'traffic light', 'fire hydrant',
                           'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog',
                           'horse', 'sheep', 'cow', 'elephant', 'bear', 'zebra',
                           'giraffe', 'backpack', 'umbrella', 'handbag', 'tie',
                           'suitcase', 'frisbee', 'skis', 'snowboard', 'sports ball',
                           'kite', 'baseball bat', 'baseball glove', 'skateboard',
                           'surfboard', 'tennis racket', 'bottle', 'wine glass', 'cup',
                           'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple',
                           'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza',
                           'donut', 'cake', 'chair', 'couch', 'potted plant', 'bed',
                           'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote',
                           'keyboard', 'cell phone', 'microwave', 'oven', 'toaster', 'sink',
                           'refrigerator', 'book', 'clock', 'vase', 'scissors',
                           'teddy bear', 'hair drier', 'toothbrush']
            num_classes: 81
        train:
            train_data_type: "train2017"
        val:
            val_data_type: "val2017"
            test_batch_size: 2


parallel:
    pipe_step:
        type: SearchPipeStep
        models_folder: "{local_base_path}/output/serial/"
        pretrained_folder: "{local_base_path}/output/serial/"

    search_algorithm:
        type: SpNasP

    search_space:
        type: SearchSpace
        hyperparameters:
            -   key: network.neck.code
                type: CATEGORY
                range: [[0, 1, 2, 3]]

    model:
        model_desc:
            type: Faster_Rcnn_MD

    trainer:
        ref: serial.trainer

    dataset:
        ref: serial.dataset

fullytrain:
    pipe_step:
        type: TrainPipeStep
        models_folder: "{local_base_path}/output/parallel/"
        pretrained_folder: "{local_base_path}/output/parallel/"

    trainer:
        ref: serial.trainer
        epochs: 24

    dataset:
        ref: serial.dataset

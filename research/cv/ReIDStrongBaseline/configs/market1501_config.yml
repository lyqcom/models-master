# Builtin Configurations(DO NOT CHANGE THESE CONFIGURATIONS unless you know exactly what you are doing)
enable_modelarts: False
# Url for modelarts
data_url: ""
train_url: ""
checkpoint_url: ""
# Path for local
data_path: "/cache/data"
output_path: "/cache/train"
load_path: "/cache/checkpoint_path"
device_target: "Ascend" # ['Ascend', 'GPU']
need_modelarts_dataset_unzip: False
modelarts_dataset_unzip_name: "market1501"

# ==============================================================================
# options
lr_init: 0.00035
lr_cri: 0.5
ims_per_id: 4
ids_per_batch: 16
max_epoch: 120
dataset: "market1501"
data_dir: "/path/to/market1501/"
n_classes: 751
image_size: '256,128'
padding: 10
image_mean: '0.486,0.459,0.408'
image_std: '0.229,0.224,0.225'
is_save_on_master: 1
is_print_on_master: 0
is_distributed: 0

# loss options
decay_epochs: '40,70'
warmup_factor: 0.01
warmup_epoch: 10
weight_decay: 0.0005 # 5e-4
global_loss_margin: 0.3
center_loss_weight: 0.0005
crossentropy_loss_weight: 0.2

# train options
pre_trained: ""
pre_trained_backbone: "/path/to/resnet50.ckpt"
log_interval: 32
ckpt_path: "/path/to/output/"
ckpt_interval: 1
keep_checkpoint_max: 2
train_log_path: "/path/to/output/"

# eval options
per_batch_size: 32
log_path: "/path/to/output/"
eval_model: ""

# export options
ckpt_file: ""
file_name: "reid_strong_market1501"
file_format: "MINDIR"

---

# Help description for each configuration
device_target: "device where the code will be implemented."
decay_epochs: "epoch for learning rate decay"
ims_per_id: "number of images for person in epoch"
ids_per_batch: "number of person in batch (there are ims_per_id images for person in batch)"
dataset: "choices in ['market1501', 'dukemtmc']"
data_dir: "data dir"
is_save_on_master: "save only main thread checkpoint"
is_print_on_master: "print only main thread logs"

# loss options
weight_decay: "optimizer weight decay"
global_loss_margin: "margin for global MarginRankingLoss"
center_loss_weight: "weight of center loss"
crossentropy_loss_weight: "weight of identity loss"

# train options
pre_trained: "model_path, local pretrained model to load"
pre_trained_backbone: "model_path, local pretrained ResNet50 backbone to load"
log_interval: "logging interval"
ckpt_path: "checkpoint save location"
ckpt_interval: "num of epochs between checkpoints"
keep_checkpoint_max: "max number of checkpoints"
train_log_path: "path for saving train logs"

# eval options
log_path: "path for saving evaluation logs"
eval_model: "path to model for evaluation"

# export options
ckpt_file: "checkpoint file"
file_name: "output file name"
file_format: "file format, choices in ['MINDIR']"

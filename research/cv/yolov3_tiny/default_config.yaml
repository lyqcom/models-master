# Builtin Configurations(DO NOT CHANGE THESE CONFIGURATIONS unless you know exactly what you are doing)
enable_modelarts: False
# Url for modelarts
data_url: ""
train_url: ""
checkpoint_url: ""
# Path for local
data_path: "/cache/data"
output_path: "/cache/train"
load_path: "/cache/checkpoint_path"
device_target: "Ascend" # ['Ascend', 'GPU']
need_modelarts_dataset_unzip: True
modelarts_dataset_unzip_name: "coco2017"

# ==============================================================================
# Training options
finetune: 0
# dataset related
data_dir: "/cache/data/coco2017/"
finetune_path: ""
predict_path: ""
per_batch_size: 32

# network related
pretrained_backbone: ""
resume_yolo: ""
resume_epoch: 0

# optimizer and lr related
lr_scheduler: "cosine_annealing"
lr: 0.001
lr_epochs: "220,250"
lr_gamma: 0.1
eta_min: 0.0
t_max: 300
max_epoch: 300
warmup_epochs: 4
weight_decay: 0.016
momentum: 0.9

# loss related
loss_scale: 1024
label_smooth: 0
label_smooth_factor: 0.1

# logging related
log_interval: 100
ckpt_path: "outputs/"
ckpt_interval: -1
is_save_on_master: 1

# distributed related
is_distributed: 1
rank: 0
group_size: 1

# profiler init
need_profiler: 0

# reset default config
training_shape: 640


# Eval option
pretrained: ""
log_path: "outputs/"
nms_thresh: 0.5
ann_file: ""
testing_shape: 640
eval_ignore_threshold: 0.001
result_path: ""
img_path: ""

# Export option
device_id: 0
batch_size: 1
ckpt_file: ""
file_name: "yolov3_tiny"
file_format: "MINDIR" # ["AIR", "ONNX", "MINDIR"]
keep_detect: True

# convert weight option
input_file: ""
output_file: ""

# Other default config
num_parallel_workers: 8
hue: 0.015
saturation: 1.5
value: 0.4
jitter: 0.3

resize_rate: 10
multi_scale: [[320, 320],
              [352, 352],
              [384, 384],
              [416, 416],
              [448, 448],
              [480, 480],
              [512, 512],
              [544, 544],
              [576, 576],
              [608, 608]
              ]

num_classes: 80
out_channel: 255 #3 * (num_classes + 5)
max_box: 90
coord_scale: 4
large_scale: 4

# confidence under ignore_threshold means no object when training
ignore_threshold: 0.7

# h->w
anchor_scales: [[10, 14],
                [23, 27],
                [37, 58],
                [81, 82],
                [135, 169],
                [344, 319]]

# test_param
test_img_shape: [640, 640]
multi_label: True
multi_label_thresh: 0.15
---

# Help description for each configuration
data_dir: "Train dataset directory."
per_batch_size: "Batch size for Training."
pretrained_backbone: "The ckpt file of backbone."
resume_yolo: "The ckpt file of YOLO, which used to fine tune."

lr_scheduler: "Learning rate scheduler, options: exponential, cosine_annealing."
lr: "Learning rate."
lr_epochs: "Epoch of changing of lr changing, split with ',' ."
lr_gamma: "Decrease lr by a factor of exponential lr_scheduler."
eta_min: "Eta_min in cosine_annealing scheduler."
t_max: "t-max in cosine_annealing scheduler."
max_epoch: "Max epoch num to train the model."
warmup_epochs: "Warmup epochs."
weight_decay: "Weight decay factor."
momentum: "Momentum."
loss_scale: "Static loss scale."
label_smooth: "Whether to use label smooth in CE."
label_smooth_factor: "Smooth strength of original one-hot."
log_interval: "Logging interval steps."
ckpt_path: "Checkpoint save location."
ckpt_interval: "Save checkpoint interval."
is_save_on_master: "Save ckpt on master or all rank, 1 for master, 0 for all ranks."
is_distributed: "Distribute train or not, 1 for yes, 0 for no."
rank: "Local rank of distributed."
group_size: "World size of device."
need_profiler: "Whether use profiler. 0 for no, 1 for yes."
training_shape: "Fix training shape."
resize_rate: "Resize rate for multi-scale training."

# eval option
pretrained: "model_path, local pretrained model to load."
log_path: "checkpoint save location."
nms_thresh: "threshold for NMS."
ann_file: "path to annotation."
testing_shape: "shape for test."
eval_ignore_threshold: "threshold to throw low quality boxes for eval."
multi_label: "whether to use multi label."
multi_label_thresh: "threshold to throw low quality boxes."

# export option
device_id: "Device id"
batch_size: "batch size"
ckpt_file: "Checkpoint file path."
file_name: "output file name."
file_format: "file format choices in ['AIR', 'ONNX', 'MINDIR']"
device_target: "device target. choices in ['Ascend', 'GPU'] for train. choices in ['Ascend', 'GPU', 'CPU'] for export."
keep_detect: "keep the detect module or not, default: True"

# convert weight option
input_file: "input file path."
output_file: "output file path."

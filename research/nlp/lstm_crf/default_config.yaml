# Builtin Configurations(DO NOT CHANGE THESE CONFIGURATIONS unless you know exactly what you are doing)
enable_modelarts: False
data_url: ""
train_url: ""
checkpoint_url: ""
data_path: "./data"
output_path: "./output/train"
load_path: "./output/checkpoint_path"
checkpoint_path: './checkpoint/'
checkpoint_file: './checkpoint/lstm_crf.ckpt'
device_target: 'CPU'
device_id: 1
enable_profiling: False
ckpt_save_path: '../ckpt_lstm_crf'


# ==============================================================================
# LSTM_CRF CONFIG
num_epochs: 20
batch_size: 20
embed_size: 300
num_hiddens: 320
num_layers: 2
bidirectional: True
keep_checkpoint_max: 20
dropout: 0.5
build_data: False


# optimizer related
optimizer: 'AdamWeightDecay'
AdamWeightDecay:
    warmup_steps: 1000
    beta1: 0.9
    beta2: 0.99
    learning_rate: 0.002  # 2e-3
    end_learning_rate: 0.0000000001  # 1e-10
    power: 1.0
    weight_decay: 0.00001  # 1e-5
    decay_filter: ['layernorm', 'bias']
    eps: 0.000001  # 1e-6


# MindSpore LSTM_CRF Example - train.py
preprocess: 'false'
data_CoNLL_path: "../data/CoNLL2000"
glove_path: "../data/glove"
preprocess_path: "/preprocess"
ckpt_path: 'lstm_crf-15_446.ckpt'
pre_trained: '' # None
device_num: 1
enable_graph_kernel: "true"


# export.py
ckpt_file: './ckpt_lstm/lstm_crf.ckpt'
file_name: "lstm_crf"
file_format: "MINDIR"

# LSTM_CRF Postprocess
label_dir: ''
result_dir: "./result_Files"

# preprocess
result_path: './preprocess_Result/'

---
# Config description for each option
enable_modelarts: 'Whether training on modelarts, default: False'
data_url: 'Dataset url for obs'
train_url: 'Training output url for obs'
data_path: 'Dataset path for local'
output_path: 'Training output path for local'

preprocess: 'whether to preprocess data.'
data_CoNLL_path: 'path where the dataset is stored.'
glove_path: 'path where the GloVe is stored.'
preprocess_path: 'path where the pre-process data is stored.'
ckpt_path: 'the path to save the checkpoint file.'
pre_trained: 'the pretrained checkpoint file path.'
device_target: 'the target device to run, "CPU". Default: "Ascend".'
device_num: 'Use device nums, default is 1.'
enable_graph_kernel: 'Accelerate by graph kernel, default is true.'

---
device_target: ['Ascend', 'CPU']
enable_graph_kernel: ['true', 'false']
file_format: ['AIR', 'MINDIR']
